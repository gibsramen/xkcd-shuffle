{"version":3,"sources":["components/App/App.tsx","components/Header/Header.tsx","components/PanelSelection/PanelSelection.tsx","components/Comic/Comic.tsx","components/Footer/Footer.tsx","placeholder.jpg","reportWebVitals.ts","index.tsx"],"names":["Header","id","UIButtons","props","onClick","submitOnClick","PanelSelection","name","onChange","value","extraBtnsDisabled","ComicInfo","comicLinks","comicsList","map","comic","slice","numPanels","link","index","class-name","href","Comic","comicPanels","i","push","src","imgLinks","alt","height","comicsUsed","Footer","defaultImgLinks","placeholder","defaultComicLinks","App","useState","setNumPanels","selectedValue","setSelectedValue","setImgLinks","setComicsUsed","isComicPresent","setIsComicPresent","useEffect","axios","post","getRandomPanels","then","response","data","img_links","original_comics","className","event","panelSelection","target","panelSelectionNum","parseInt","charAt","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0131547a.chunk.js","sourcesContent":["import { useState, useEffect, ChangeEvent, MouseEvent } from 'react';\nimport Header from '../Header/Header';\nimport PanelSelection from '../PanelSelection/PanelSelection';\nimport Comic from '../Comic/Comic';\nimport Footer from '../Footer/Footer';\nimport axios from 'axios';\nimport placeholder from '../../placeholder.jpg'\nimport './App.css';\n\nconst apiUrl = \"https://ohls623gud.execute-api.us-west-1.amazonaws.com/default/return-random-xkcd-panels\";\nconst defaultImgLinks: string[] = [];\nfor (let i = 0; i < 5; i++) {\n  defaultImgLinks.push(placeholder);\n}\n\nconst defaultComicLinks: string[] = [];\nfor (let i = 0; i < 5; i++) {\n  defaultComicLinks.push(\"1\");\n}\n\nfunction getRandomPanels(numPanels: number) {\n  return axios.post(apiUrl, {numPanels: numPanels});\n}\n\nconst App = () => {\n  const [numPanels, setNumPanels] = useState(3);\n  const [selectedValue, setSelectedValue] = useState(3);\n  const [imgLinks, setImgLinks] = useState(defaultImgLinks);\n  const [comicsUsed, setComicsUsed] = useState(defaultComicLinks);\n  const [isComicPresent, setIsComicPresent] = useState(false); //don't display anything to start\n\n  useEffect( () => {\n    if (process.env.NODE_ENV === \"production\") {\n      getRandomPanels(numPanels).then( response => {\n        setImgLinks(response.data.img_links);\n        setComicsUsed(response.data.original_comics);\n      });\n    } else {\n      setImgLinks(defaultImgLinks);\n      setComicsUsed(defaultComicLinks);\n    }\n  }, [numPanels])\n\n  const selectNumPanels = (event: ChangeEvent<HTMLSelectElement>) => {\n    const panelSelection = event.target.value;\n    const panelSelectionNum = parseInt(panelSelection.charAt(0));\n    setSelectedValue(panelSelectionNum);\n  };\n\n  const submitEvent = (event: MouseEvent<HTMLButtonElement>) => {\n    setIsComicPresent(true);\n    setNumPanels(selectedValue);\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <PanelSelection\n        onChange={selectNumPanels}\n        onClick={submitEvent}\n        value={selectedValue}\n        extraBtnsDisabled={!isComicPresent}\n      />\n      {\n        isComicPresent &&\n        <Comic numPanels={numPanels} imgLinks={imgLinks} comicsUsed={comicsUsed} />\n      }\n      <Footer />\n     </div>\n  );\n};\n\nexport default App;\n","import './Header.css';\n\nconst Header = () => {\n  return (\n    <header id=\"header\">\n      <h1>xkcd-shuffle</h1>\n    </header>\n  )\n}\n\nexport default Header;\n","import { ChangeEvent, MouseEvent } from 'react';\nimport './PanelSelection.css';\n\ninterface Props {\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void,\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void,\n  value: number,\n  extraBtnsDisabled: boolean\n};\n\nconst PanelSelection = (props: Props) => {\n  return (\n    <div id=\"panel-number-select\">\n      <label>Number of panels: </label>\n      <select\n        name=\"num-panels\"\n        id=\"num-panels-select\"\n        onChange={props.onChange}\n      >\n        <option value=\"3-panels\">3</option>\n        <option value=\"4-panels\">4</option>\n        <option value=\"5-panels\">5</option>\n      </select>\n      <UIButtons\n        extraBtnsDisabled={props.extraBtnsDisabled}\n        submitOnClick={props.onClick}\n      />\n    </div>\n  )\n};\n\nconst UIButtons = (props: any) => {\n  return (\n      <span>\n        <button onClick={props.submitOnClick}>Submit</button>\n      </span>\n  )\n};\n\nexport default PanelSelection;\n","import './Comic.css';\n\ninterface ComicProps {\n  numPanels: number,\n  imgLinks: Array<string>,\n  comicsUsed: Array<string>\n};\n\nconst Comic = (props: ComicProps) => {\n  const comicPanels = [];\n  for (let i=0; i < props.numPanels; i++) {\n    comicPanels.push(\n      <img src={props.imgLinks[i]} key={i} alt=\"placeholder\" height=\"200px\"/>\n    )\n  }\n\n  return (\n    <div id=\"comic-container\">\n      <div id=\"comic\">{comicPanels}</div>\n      <ComicInfo comicsList={props.comicsUsed} numPanels={props.numPanels} />\n    </div>\n  )\n};\n\ninterface ComicInfoProps {\n  comicsList: Array<string>,\n  numPanels: number\n};\n\nconst ComicInfo = (props: ComicInfoProps) => {\n  const links = props.comicsList.map( (comic) =>\n    \"https://xkcd.com/\" + comic\n  ).slice(0, props.numPanels);\n\n  const comicLinks = links.map( (link, index) =>\n    <p class-name=\"comic-link\" key={index}>\n      <a href={link}>{link}</a>\n    </p>\n  );\n\n  return (\n    <div id=\"comic-info\">\n      <p>Comics used:</p>\n      {comicLinks}\n    </div>\n  )\n};\n\nexport default Comic;\n","import './Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>All comic panels taken from <a href=\"https://xkcd.com\">xkcd.com</a></p>\n    </footer>\n  )\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/placeholder.8e311211.jpg\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}